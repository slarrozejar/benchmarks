process Ctrl {

    state start_Ctrl{Ctrl_z <= 0}, wait_for_s2{Ctrl_z <= 1000}, g1{Ctrl_z <= 1000}, wait_for_s1{Ctrl_z <= 1000}, g2{Ctrl_z <= 1000};
    init start_Ctrl;
    trans
    start_Ctrl -> wait_for_s2 { assign Ctrl_grant1 := 0, Ctrl_grant2 := 0, Ctrl_IntStat := 0; },
    wait_for_s2 -> wait_for_s2 { guard Ctrl_IntStat == 0 && Ctrl_z > 0; assign polled_Ctrl_Safe1 := S1_Safe, polled_Ctrl_Safe2 := S2_Safe, Ctrl_IntStat := 1; },
    wait_for_s2 -> wait_for_s2 { guard Ctrl_IntStat == 2; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    wait_for_s2 -> wait_for_s2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 0 && Ctrl_grant1 == 0; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    wait_for_s2 -> wait_for_s2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 1 && Ctrl_grant1 == 0 && Ctrl_y0 < 2000; assign Ctrl_IntStat := 2; },
    wait_for_s2 -> g1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 1 && Ctrl_grant1 == 0 && Ctrl_y0 >= 2000; assign Ctrl_grant1 := 1, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; },
    g1 -> g1 { guard Ctrl_IntStat == 0 && Ctrl_z > 0; assign polled_Ctrl_Safe1 := S1_Safe, polled_Ctrl_Safe2 := S2_Safe, Ctrl_IntStat := 1; },
    g1 -> g1 { guard Ctrl_IntStat == 2; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    g1 -> wait_for_s1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 0 && Ctrl_grant1 == 1; assign Ctrl_grant1 := 0, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; },
    g1 -> g1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 1 && Ctrl_grant1 == 1 && Ctrl_y0 < 2000; assign Ctrl_IntStat := 2; },
    g1 -> wait_for_s1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 1 && Ctrl_grant1 == 1 && Ctrl_y0 >= 2000; assign Ctrl_grant1 := 0, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; },
    wait_for_s1 -> wait_for_s1 { guard Ctrl_IntStat == 0 && Ctrl_z > 0; assign polled_Ctrl_Safe1 := S1_Safe, polled_Ctrl_Safe2 := S2_Safe, Ctrl_IntStat := 1; },
    wait_for_s1 -> wait_for_s1 { guard Ctrl_IntStat == 2; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    wait_for_s1 -> wait_for_s1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 0 && Ctrl_grant2 == 0; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    wait_for_s1 -> wait_for_s1 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 1 && Ctrl_grant2 == 0 && Ctrl_y0 < 2000; assign Ctrl_IntStat := 2; },
    wait_for_s1 -> g2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe1 == 1 && Ctrl_grant2 == 0 && Ctrl_y0 >= 2000; assign Ctrl_grant2 := 1, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; },
    g2 -> g2 { guard Ctrl_IntStat == 0 && Ctrl_z > 0; assign polled_Ctrl_Safe1 := S1_Safe, polled_Ctrl_Safe2 := S2_Safe, Ctrl_IntStat := 1; },
    g2 -> g2 { guard Ctrl_IntStat == 2; assign Ctrl_IntStat := 0, Ctrl_z := 0; },
    g2 -> wait_for_s2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 0 && Ctrl_grant2 == 1; assign Ctrl_grant2 := 0, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; },
    g2 -> g2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 1 && Ctrl_grant2 == 1 && Ctrl_y0 < 2000; assign Ctrl_IntStat := 2; },
    g2 -> wait_for_s2 { guard Ctrl_IntStat == 1 && polled_Ctrl_Safe2 == 1 && Ctrl_grant2 == 1 && Ctrl_y0 >= 2000; assign Ctrl_grant2 := 0, Ctrl_IntStat := 0, Ctrl_z := 0, Ctrl_y0 := 0; };
}
