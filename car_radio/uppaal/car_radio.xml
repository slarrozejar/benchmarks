<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>/***************************************************************

1 TIMEUNIT = 1 MICRO SECOND

System architecture A:
- preemptive priority scheduling (also for BUS in order to compare !!!)

***************************************************************/

// For measuring WCRT:
clock rt;
meta int obs=-1;

const int TS = 1000000; // timeunits per second

const int MMI_MIPS = 22;
const int NAV_MIPS = 113;
const int RAD_MIPS = 11;
const int BUS_KBPS = 72;

// The max number of output channels for all scenarios
chan signal[4];

// Change volume scenario:
const int KEYPRESS1_PER_SEC = 32;
const int KP1_INSTR = 100000;
const int US1_INSTR = 500000;
const int AV_INSTR = 100000;
int keypress1=0, setvolume=0, getvolume=0, setvolume_out=0, getvolume_out=0;
// These *must* be consecutive:
const int AC1 = 0;
const int VC1 = 1;

// Address look-up scenario:
const int KEYPRESS2_PER_SEC = 1;
const int US2_INSTR = 500000;
const int KP2_INSTR = 100000;
const int DBL_INSTR = 5000000;
int keypress2=0, address_lookup=0, nav_result=0, address_lookup_out=0, nav_result_out=0;
const int VC2 = 2;

// TMC message handling scenario:
const int MESSAGES_PER_MINUTE = 20;
const int HTMC_INSTR = 1000000;
const int DTMC_INSTR = 5000000;
const int US3_INSTR = 500000;
int rec=0, rec_nav=0, htmc=0, receive_out=0, handle_tmc_out=0;
const int VC3 = 3;

urgent chan hurry;
</declaration>
	<template>
		<name x="5" y="5">BusP</name>
		<declaration>clock x;

const int BYTES4 = (8*4*TS)/(BUS_KBPS*1000);
const int BYTES64 = (8*64*TS)/(BUS_KBPS*1000);

// for preemption
int[0,2147483648] D:=0;
clock y;</declaration>
		<location id="id0" x="192" y="192">
			<name x="200" y="144">idle</name>
		</location>
		<location id="id1" x="384" y="64">
			<name x="400" y="32">sending_setvol</name>
			<label kind="invariant" x="400" y="48">x&lt;=BYTES4</label>
		</location>
		<location id="id2" x="192" y="-64">
			<name x="160" y="-112">sending_getvol</name>
			<label kind="invariant" x="160" y="-96">x&lt;=BYTES4</label>
		</location>
		<location id="id3" x="0" y="64">
			<name x="-112" y="24">sending_db_lookup</name>
			<label kind="invariant" x="-72" y="40">x&lt;=BYTES4</label>
		</location>
		<location id="id4" x="192" y="416">
			<name x="144" y="424">sending_nav_res</name>
			<label kind="invariant" x="144" y="440">x&lt;=BYTES64</label>
		</location>
		<location id="id5" x="0" y="288">
			<name x="-128" y="288">sending_receive</name>
			<label kind="invariant" x="8" y="296">x&lt;=D</label>
		</location>
		<location id="id6" x="416" y="288">
			<name x="392" y="304">sending_htmc</name>
			<label kind="invariant" x="392" y="320">x&lt;=D</label>
		</location>
		<location id="id7" x="-288" y="64">
			<label kind="invariant" x="-312" y="24">y&lt;=BYTES4</label>
		</location>
		<location id="id8" x="-352" y="224">
			<label kind="invariant" x="-362" y="239">y&lt;=BYTES64</label>
		</location>
		<location id="id9" x="640" y="128">
			<label kind="invariant" x="632" y="104">y&lt;=BYTES4</label>
		</location>
		<location id="id10" x="704" y="256">
			<label kind="invariant" x="694" y="271">y&lt;=BYTES64</label>
		</location>
		<location id="id11" x="-312" y="448">
			<label kind="invariant" x="-322" y="463">y&lt;=BYTES4</label>
		</location>
		<location id="id12" x="-64" y="576">
			<label kind="invariant" x="-74" y="591">y&lt;=BYTES4</label>
		</location>
		<location id="id13" x="576" y="560">
			<label kind="invariant" x="566" y="575">y&lt;=BYTES4</label>
		</location>
		<location id="id14" x="672" y="448">
			<label kind="invariant" x="662" y="463">y&lt;=BYTES4</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="256" y="32">setvolume_out&gt;0</label>
			<label kind="synchronisation" x="256" y="48">hurry!</label>
			<label kind="assignment" x="256" y="64">setvolume_out--,
x:=0</label>
			<nail x="336" y="80"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="336" y="104">x==BYTES4</label>
			<label kind="assignment" x="336" y="120">setvolume++</label>
			<nail x="352" y="96"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="40" y="-56">getvolume_out&gt;0</label>
			<label kind="synchronisation" x="120" y="-40">hurry!</label>
			<label kind="assignment" x="0" y="-24">getvolume_out--, x:=0</label>
			<nail x="176" y="-24"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="guard" x="216" y="-32">x==BYTES4</label>
			<label kind="assignment" x="216" y="-16">getvolume++</label>
			<nail x="208" y="-24"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="24" y="16">address_lookup_out&gt;0</label>
			<label kind="synchronisation" x="32" y="32">hurry!</label>
			<label kind="assignment" x="32" y="48">address_lookup_out--,
x:=0</label>
			<nail x="40" y="72"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="guard" x="-16" y="120">x==BYTES4</label>
			<label kind="assignment" x="-16" y="136">address_lookup++</label>
			<nail x="24" y="88"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id4"/>
			<label kind="guard" x="40" y="344">nav_result_out&gt;0</label>
			<label kind="synchronisation" x="120" y="360">hurry!</label>
			<label kind="assignment" x="8" y="376">nav_result_out--, x:=0</label>
			<nail x="168" y="376"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="224" y="360">x==BYTES64</label>
			<label kind="assignment" x="224" y="376">nav_result++</label>
			<nail x="216" y="376"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id5"/>
			<label kind="guard" x="-48" y="144">receive_out&gt;0 &amp;&amp;
address_lookup_out==0 &amp;&amp;
nav_result_out==0 &amp;&amp;
getvolume_out==0 &amp;&amp;
setvolume_out==0</label>
			<label kind="synchronisation" x="-48" y="208">hurry!</label>
			<label kind="assignment" x="-48" y="224">receive_out--,x:=0, D:=BYTES64</label>
			<nail x="40" y="248"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id0"/>
			<label kind="guard" x="56" y="272">x==D</label>
			<label kind="assignment" x="56" y="288">rec_nav++, D:=0</label>
			<nail x="56" y="272"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id6"/>
			<label kind="guard" x="280" y="136">handle_tmc_out&gt;0 &amp;&amp;
address_lookup_out==0 &amp;&amp;
nav_result_out==0 &amp;&amp;
getvolume_out==0 &amp;&amp;
setvolume_out==0</label>
			<label kind="synchronisation" x="296" y="200">hurry!</label>
			<label kind="assignment" x="280" y="216">handle_tmc_out--,
x:=0, D:=BYTES64</label>
			<nail x="384" y="248"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id0"/>
			<label kind="guard" x="272" y="272">x==D</label>
			<label kind="assignment" x="272" y="288">htmc++, D:=0</label>
			<nail x="360" y="280"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id7"/>
			<label kind="guard" x="-248" y="56">address_lookup_out&gt;0</label>
			<label kind="synchronisation" x="-224" y="72">hurry!</label>
			<label kind="assignment" x="-224" y="88">address_lookup_out--, y:=0</label>
			<nail x="-240" y="72"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id5"/>
			<label kind="guard" x="-280" y="112">y==BYTES4</label>
			<label kind="assignment" x="-280" y="128">address_lookup++,
D+=BYTES4</label>
			<nail x="-272" y="104"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id8"/>
			<label kind="guard" x="-288" y="208">nav_result_out&gt;0</label>
			<label kind="synchronisation" x="-256" y="216">hurry!</label>
			<label kind="assignment" x="-256" y="232">nav_result_out--, y:=0</label>
			<nail x="-304" y="216"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id5"/>
			<label kind="guard" x="-272" y="264">y==BYTES64</label>
			<label kind="assignment" x="-264" y="272">nav_result++,
D+=BYTES64</label>
			<nail x="-296" y="256"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id9"/>
			<label kind="guard" x="472" y="128">address_lookup_out&gt;0</label>
			<label kind="synchronisation" x="488" y="136">hurry!</label>
			<label kind="assignment" x="480" y="152">address_lookup_out--, y:=0</label>
			<nail x="584" y="152"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="552" y="184">y==BYTES4</label>
			<label kind="assignment" x="544" y="200">address_lookup++,
D+=BYTES4</label>
			<nail x="616" y="176"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id10"/>
			<label kind="guard" x="536" y="240">nav_result_out&gt;0</label>
			<label kind="synchronisation" x="536" y="256">hurry!</label>
			<label kind="assignment" x="520" y="248">nav_result_out--, y:=0</label>
			<nail x="432" y="288"/>
			<nail x="656" y="248"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id6"/>
			<label kind="guard" x="560" y="272">y==BYTES64</label>
			<label kind="assignment" x="592" y="280">nav_result++,
D+=BYTES64</label>
			<nail x="656" y="288"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id11"/>
			<label kind="guard" x="-320" y="336">getvolume_out&gt;0</label>
			<label kind="synchronisation" x="-304" y="352">hurry!</label>
			<label kind="assignment" x="-320" y="368">getvolume_out--, y:=0</label>
			<nail x="-288" y="408"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id5"/>
			<label kind="guard" x="-264" y="400">y==BYTES4</label>
			<label kind="assignment" x="-256" y="416">getvolume++,
D+=BYTES4</label>
			<nail x="-280" y="448"/>
			<nail x="-240" y="440"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id12"/>
			<label kind="guard" x="-136" y="472">setvolume_out&gt;0</label>
			<label kind="synchronisation" x="-144" y="488">hurry!</label>
			<label kind="assignment" x="-144" y="504">setvolume_out--,
y:=0</label>
			<nail x="-72" y="536"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id5"/>
			<label kind="guard" x="-16" y="504">y==BYTES4</label>
			<label kind="assignment" x="-16" y="520">setvolume++,
D+=BYTES4</label>
			<nail x="-32" y="544"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id14"/>
			<label kind="guard" x="576" y="328">getvolume_out&gt;0</label>
			<label kind="synchronisation" x="576" y="344">hurry!</label>
			<label kind="assignment" x="584" y="360">getvolume_out--, y:=0</label>
			<nail x="640" y="400"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id6"/>
			<label kind="guard" x="504" y="368">y==BYTES4</label>
			<label kind="assignment" x="520" y="384">getvolume++, D+=BYTES4</label>
			<nail x="608" y="432"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id13"/>
			<label kind="guard" x="496" y="448">setvolume_out&gt;0</label>
			<label kind="synchronisation" x="528" y="464">hurry!</label>
			<label kind="assignment" x="536" y="480">setvolume_out--,
y:=0</label>
			<nail x="568" y="520"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id6"/>
			<label kind="guard" x="392" y="440">y==BYTES4</label>
			<label kind="assignment" x="408" y="448">setvolume++,
D+=BYTES4</label>
			<nail x="512" y="528"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">MMI</name>
		<declaration>/***********************************************
***********************************************/

clock x;

// ChangeVolume scenario:
const int HK1 = (KP1_INSTR/MMI_MIPS)/(1000000/TS);
const int US1 = (US1_INSTR/MMI_MIPS)/(1000000/TS);

// has priority over:

// AddressLookup scenario:
const int HK2 = (KP2_INSTR/MMI_MIPS)/(1000000/TS);
const int US2 = (US2_INSTR/MMI_MIPS)/(1000000/TS);

// has priority over:

// HandleTMC scenario:
const int US3 = (US3_INSTR/MMI_MIPS)/(1000000/TS);

// for preemption
int[0,2147483648] D:=0, D2:=0;
clock y, z;</declaration>
		<location id="id15" x="224" y="224">
			<name x="214" y="194">idle</name>
		</location>
		<location id="id16" x="64" y="64">
			<name x="24" y="16">handle_key_press1</name>
			<label kind="invariant" x="24" y="32">x&lt;=HK1</label>
		</location>
		<location id="id17" x="224" y="416">
			<name x="176" y="432">update_screen1</name>
			<label kind="invariant" x="176" y="448">x&lt;=D</label>
		</location>
		<location id="id18" x="392" y="64">
			<name x="408" y="24">handle_keypress2</name>
			<label kind="invariant" x="408" y="40">x&lt;=HK2</label>
		</location>
		<location id="id19" x="24" y="288">
			<name x="-96" y="272">update_screen2</name>
			<label kind="invariant" x="-48" y="288">x&lt;=D</label>
		</location>
		<location id="id20" x="416" y="288">
			<name x="448" y="272">update_screen3</name>
			<label kind="invariant" x="488" y="288">x&lt;=D</label>
		</location>
		<location id="id21" x="608" y="192">
			<label kind="invariant" x="632" y="184">y&lt;=HK2</label>
		</location>
		<location id="id22" x="664" y="384">
			<label kind="invariant" x="654" y="399">y&lt;=D2</label>
		</location>
		<location id="id23" x="320" y="600">
			<label kind="invariant" x="310" y="615">y&lt;=HK1</label>
		</location>
		<location id="id24" x="608" y="576">
			<label kind="invariant" x="592" y="584">y&lt;=D2</label>
		</location>
		<location id="id25" x="0" y="544">
			<label kind="invariant" x="-40" y="560">y&lt;=HK1</label>
		</location>
		<location id="id26" x="608" y="832">
			<label kind="invariant" x="598" y="847">z&lt;=HK1</label>
		</location>
		<location id="id27" x="-152" y="416">
			<label kind="invariant" x="-162" y="431">y&lt;=HK2</label>
		</location>
		<location id="id28" x="864" y="576">
			<label kind="invariant" x="854" y="591">z&lt;=HK2</label>
		</location>
		<init ref="id15"/>
		<transition>
			<source ref="id16"/>
			<target ref="id15"/>
			<label kind="guard" x="112" y="56">x==HK1</label>
			<label kind="assignment" x="112" y="72">setvolume_out++</label>
			<nail x="112" y="88"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-8" y="104">keypress1&gt;0</label>
			<label kind="synchronisation" x="-8" y="120">hurry!</label>
			<label kind="assignment" x="-8" y="136">keypress1--, x:=0</label>
			<nail x="80" y="104"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id17"/>
			<label kind="guard" x="104" y="344">getvolume&gt;0 &amp;&amp; keypress1==0</label>
			<label kind="synchronisation" x="160" y="360">hurry!</label>
			<label kind="assignment" x="64" y="376">D:=US1, getvolume--, x:=0</label>
			<nail x="208" y="384"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id15"/>
			<label kind="guard" x="248" y="352">x==D</label>
			<label kind="synchronisation" x="248" y="368">signal[VC1]!</label>
			<label kind="assignment" x="256" y="384">D=0</label>
			<nail x="240" y="384"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id18"/>
			<label kind="guard" x="264" y="48">keypress2&gt;0</label>
			<label kind="synchronisation" x="264" y="64">hurry!</label>
			<label kind="assignment" x="264" y="80">keypress2--, x:=0</label>
			<nail x="352" y="80"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id15"/>
			<label kind="guard" x="352" y="120">x==HK2</label>
			<label kind="assignment" x="352" y="136">address_lookup_out++</label>
			<nail x="384" y="96"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id19"/>
			<label kind="guard" x="24" y="200">nav_result&gt;0 &amp;&amp; keypress2==0</label>
			<label kind="synchronisation" x="24" y="216">hurry!</label>
			<label kind="assignment" x="24" y="232">nav_result--, x:=0, D:=US2</label>
			<nail x="64" y="256"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id15"/>
			<label kind="guard" x="72" y="288">x==D</label>
			<label kind="synchronisation" x="32" y="304">signal[VC2]!</label>
			<label kind="assignment" x="64" y="320">D:=0</label>
			<nail x="72" y="296"/>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id20"/>
			<label kind="guard" x="296" y="152">htmc&gt;0 &amp;&amp;
keypress2==0 &amp;&amp;
nav_result==0 &amp;&amp;
keypress1==0 &amp;&amp;
getvolume==0</label>
			<label kind="synchronisation" x="320" y="208">hurry!</label>
			<label kind="assignment" x="320" y="224">htmc--, x:=0, D:=US3</label>
			<nail x="384" y="256"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id15"/>
			<label kind="guard" x="264" y="264">x==D</label>
			<label kind="synchronisation" x="280" y="280">signal[VC3]!</label>
			<label kind="assignment" x="296" y="296">D:=0</label>
			<nail x="368" y="296"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id22"/>
			<label kind="guard" x="592" y="296">nav_result&gt;0 &amp;&amp; keypress2==0</label>
			<label kind="synchronisation" x="608" y="304">hurry!</label>
			<label kind="assignment" x="608" y="320">nav_result--, y:=0, D2:=US2</label>
			<nail x="656" y="344"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id20"/>
			<label kind="guard" x="520" y="328">y==D2</label>
			<label kind="synchronisation" x="520" y="344">signal[VC1]!</label>
			<label kind="assignment" x="528" y="360">D+=US2, D2:=0</label>
			<nail x="584" y="376"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="496" y="160">keypress2&gt;0</label>
			<label kind="synchronisation" x="496" y="176">hurry!</label>
			<label kind="assignment" x="496" y="192">keypress2--, y:=0</label>
			<nail x="552" y="192"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id20"/>
			<label kind="guard" x="552" y="232">y==HK2</label>
			<label kind="assignment" x="552" y="248">address_lookup_out++,
D+=HK2</label>
			<nail x="576" y="224"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id23"/>
			<label kind="guard" x="256" y="480">keypress1&gt;0</label>
			<label kind="synchronisation" x="248" y="496">hurry!</label>
			<label kind="assignment" x="248" y="512">keypress1--, y:=0</label>
			<nail x="320" y="544"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id20"/>
			<label kind="guard" x="368" y="520">y==HK1</label>
			<label kind="assignment" x="368" y="536">setvolume_out++,
D+=HK1</label>
			<nail x="360" y="552"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id24"/>
			<label kind="guard" x="512" y="408">getvolume&gt;0 &amp;&amp; keypress1==0</label>
			<label kind="synchronisation" x="544" y="424">hurry!</label>
			<label kind="assignment" x="552" y="448">getvolume--, y:=0, D2:=US1</label>
			<nail x="608" y="528"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id20"/>
			<label kind="guard" x="456" y="464">y==D2</label>
			<label kind="synchronisation" x="456" y="480">signal[VC1]!</label>
			<label kind="assignment" x="464" y="496">D+=US1, D2:=0</label>
			<nail x="544" y="552"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id25"/>
			<label kind="guard" x="0" y="448">keypress1&gt;0</label>
			<label kind="synchronisation" x="0" y="464">hurry!</label>
			<label kind="assignment" x="0" y="480">keypress1--, y:=0</label>
			<nail x="16" y="504"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id17"/>
			<label kind="guard" x="48" y="528">y==HK1</label>
			<label kind="assignment" x="40" y="544">setvolume_out++,
D+=HK1</label>
			<nail x="56" y="544"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id26"/>
			<label kind="guard" x="632" y="672">keypress1&gt;0</label>
			<label kind="synchronisation" x="640" y="688">hurry!</label>
			<label kind="assignment" x="640" y="704">keypress1--, z:=0</label>
			<nail x="616" y="592"/>
			<nail x="632" y="760"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id24"/>
			<label kind="guard" x="504" y="664">z==HK1</label>
			<label kind="assignment" x="488" y="680">setvolume_out++,
D2+=HK1, D+=HK1</label>
			<nail x="592" y="760"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id27"/>
			<label kind="guard" x="-168" y="304">keypress2&gt;0</label>
			<label kind="synchronisation" x="-168" y="320">hurry!</label>
			<label kind="assignment" x="-168" y="336">keypress2--, y:=0</label>
			<nail x="-128" y="360"/>
		</transition>
		<transition>
			<source ref="id27"/>
			<target ref="id19"/>
			<label kind="guard" x="-104" y="392">y==HK2</label>
			<label kind="assignment" x="-96" y="408">address_lookup_out++,
D+=HK2</label>
			<nail x="-80" y="408"/>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id28"/>
			<label kind="guard" x="776" y="432">keypress2&gt;0</label>
			<label kind="synchronisation" x="800" y="440">hurry!</label>
			<label kind="assignment" x="784" y="448">keypress2--, z:=0</label>
			<nail x="816" y="480"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id22"/>
			<label kind="guard" x="704" y="520">z==HK2</label>
			<label kind="assignment" x="712" y="536">address_lookup_out++,
D2+=HK2, D+=HK2</label>
			<nail x="784" y="528"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">NAV</name>
		<declaration>clock x;

const int  DBL  = (DBL_INSTR/NAV_MIPS)/(1000000/TS);
const int DTMC = (DTMC_INSTR/NAV_MIPS)/(1000000/TS);

// for preemption
int[0,2147483648] D:=0;
clock y;</declaration>
		<location id="id29" x="192" y="224">
			<name x="182" y="194">idle</name>
		</location>
		<location id="id30" x="32" y="224">
			<name x="-96" y="208">database_lookup</name>
			<label kind="invariant" x="-40" y="224">x&lt;=DBL</label>
		</location>
		<location id="id31" x="352" y="224">
			<name x="336" y="240">decode_TMC</name>
			<label kind="invariant" x="336" y="256">x&lt;=D</label>
		</location>
		<location id="id32" x="544" y="224">
			<name x="560" y="208">dbl_pre</name>
			<label kind="invariant" x="560" y="224">y&lt;=DBL</label>
		</location>
		<init ref="id29"/>
		<transition>
			<source ref="id29"/>
			<target ref="id30"/>
			<label kind="guard" x="72" y="128">address_lookup&gt;0</label>
			<label kind="synchronisation" x="72" y="144">hurry!</label>
			<label kind="assignment" x="72" y="160">address_lookup--,
x:=0</label>
			<nail x="96" y="192"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id29"/>
			<label kind="guard" x="72" y="256">x==DBL</label>
			<label kind="assignment" x="72" y="272">nav_result_out++</label>
			<nail x="96" y="256"/>
		</transition>
		<transition>
			<source ref="id29"/>
			<target ref="id31"/>
			<label kind="guard" x="232" y="128">rec_nav&gt;0 &amp;&amp;
address_lookup==0</label>
			<label kind="synchronisation" x="232" y="160">hurry!</label>
			<label kind="assignment" x="232" y="176">D:=DTMC, x:=0, rec_nav--</label>
			<nail x="288" y="192"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id29"/>
			<label kind="guard" x="232" y="256">x==D</label>
			<label kind="assignment" x="232" y="272">handle_tmc_out++,
D:=0</label>
			<nail x="288" y="256"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id32"/>
			<label kind="guard" x="432" y="144">address_lookup&gt;0</label>
			<label kind="synchronisation" x="432" y="160">hurry!</label>
			<label kind="assignment" x="432" y="176">address_lookup--, y:=0</label>
			<nail x="480" y="192"/>
		</transition>
		<transition>
			<source ref="id32"/>
			<target ref="id31"/>
			<label kind="guard" x="440" y="256">y==DBL</label>
			<label kind="assignment" x="440" y="272">nav_result_out++,
D+=DBL</label>
			<nail x="480" y="256"/>
		</transition>
		<transition>
			<source ref="id31"/>
			<target ref="id29"/>
			<label kind="guard" x="240" y="208">x==D</label>
			<label kind="synchronisation" x="240" y="232">signal[VC3]!</label>
			<label kind="assignment" x="240" y="224">D:=0</label>
		</transition>
	</template>
	<template>
		<name x="5" y="5">RAD</name>
		<declaration>clock x;

const int AV   =  (AV_INSTR/RAD_MIPS)/(1000000/TS);
const int HTMC = (HTMC_INSTR/RAD_MIPS)/(1000000/TS);

// for preemption
int[0,2147483648] D:=0;
clock y;</declaration>
		<location id="id33" x="160" y="256">
			<name x="150" y="226">idle</name>
		</location>
		<location id="id34" x="352" y="256">
			<name x="368" y="240">adjust_volume</name>
			<label kind="invariant" x="368" y="256">x&lt;=AV</label>
		</location>
		<location id="id35" x="-32" y="256">
			<name x="-72" y="224">handle_TMC</name>
			<label kind="invariant" x="-56" y="272">x&lt;=D</label>
		</location>
		<location id="id36" x="-224" y="256">
			<name x="-288" y="240">hdl_pre</name>
			<label kind="invariant" x="-288" y="256">y&lt;=AV</label>
		</location>
		<init ref="id33"/>
		<transition>
			<source ref="id33"/>
			<target ref="id34"/>
			<label kind="guard" x="224" y="168">setvolume&gt;0</label>
			<label kind="synchronisation" x="224" y="184">hurry!</label>
			<label kind="assignment" x="224" y="200">setvolume--, x:=0</label>
			<nail x="256" y="224"/>
		</transition>
		<transition>
			<source ref="id33"/>
			<target ref="id35"/>
			<label kind="guard" x="32" y="168">rec&gt;0 &amp;&amp; setvolume==0</label>
			<label kind="synchronisation" x="32" y="184">hurry!</label>
			<label kind="assignment" x="32" y="200">rec--, x:=0, D:=HTMC</label>
			<nail x="64" y="224"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id33"/>
			<label kind="guard" x="32" y="288">x==D</label>
			<label kind="assignment" x="32" y="304">D:=0, receive_out++</label>
			<nail x="64" y="288"/>
		</transition>
		<transition>
			<source ref="id34"/>
			<target ref="id33"/>
			<label kind="guard" x="224" y="288">x==AV</label>
			<label kind="synchronisation" x="224" y="304">signal[AC1]!</label>
			<label kind="assignment" x="224" y="320">getvolume_out++</label>
			<nail x="256" y="288"/>
		</transition>
		<transition>
			<source ref="id35"/>
			<target ref="id36"/>
			<label kind="guard" x="-192" y="168">setvolume&gt;0</label>
			<label kind="synchronisation" x="-192" y="184">hurry!</label>
			<label kind="assignment" x="-192" y="200">setvolume--, y:=0</label>
			<nail x="-128" y="224"/>
		</transition>
		<transition>
			<source ref="id36"/>
			<target ref="id35"/>
			<label kind="guard" x="-192" y="288">y==AV</label>
			<label kind="synchronisation" x="-192" y="304">signal[AC1]!</label>
			<label kind="assignment" x="-192" y="320">getvolume_out++,
D+=AV</label>
			<nail x="-128" y="288"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">HurryDummy</name>
		<location id="id37" x="160" y="224">
		</location>
		<init ref="id37"/>
		<transition>
			<source ref="id37"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="232" y="216">hurry?</label>
			<nail x="224" y="192"/>
			<nail x="224" y="256"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Bus</name>
		<declaration>clock x;

const int BYTES4  = (8*4*TS)/(BUS_KBPS*1000);
const int BYTES64 = (8*64*TS)/(BUS_KBPS*1000);</declaration>
		<location id="id38" x="192" y="192">
			<name x="200" y="144">idle</name>
		</location>
		<location id="id39" x="384" y="64">
			<name x="400" y="32">sending_setvol</name>
			<label kind="invariant" x="400" y="48">x&lt;=BYTES4</label>
		</location>
		<location id="id40" x="192" y="-64">
			<name x="160" y="-112">sending_getvol</name>
			<label kind="invariant" x="160" y="-96">x&lt;=BYTES4</label>
		</location>
		<location id="id41" x="0" y="64">
			<name x="-112" y="80">sending_db_lookup</name>
			<label kind="invariant" x="-72" y="96">x&lt;=BYTES4</label>
		</location>
		<location id="id42" x="192" y="416">
			<name x="144" y="424">sending_nav_res</name>
			<label kind="invariant" x="144" y="440">x&lt;=BYTES64</label>
		</location>
		<location id="id43" x="0" y="288">
			<name x="-56" y="296">sending_receive</name>
			<label kind="invariant" x="-56" y="312">x&lt;=BYTES64</label>
		</location>
		<location id="id44" x="416" y="288">
			<name x="392" y="304">sending_htmc</name>
			<label kind="invariant" x="392" y="320">x&lt;=BYTES64</label>
		</location>
		<init ref="id38"/>
		<transition>
			<source ref="id38"/>
			<target ref="id39"/>
			<label kind="guard" x="256" y="32">setvolume_out&gt;0</label>
			<label kind="synchronisation" x="256" y="48">hurry!</label>
			<label kind="assignment" x="256" y="64">setvolume_out--,
x:=0</label>
			<nail x="336" y="80"/>
		</transition>
		<transition>
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="guard" x="336" y="104">x==BYTES4</label>
			<label kind="assignment" x="336" y="120">setvolume++</label>
			<nail x="352" y="96"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id40"/>
			<label kind="guard" x="40" y="-56">getvolume_out&gt;0</label>
			<label kind="synchronisation" x="120" y="-40">hurry!</label>
			<label kind="assignment" x="0" y="-24">getvolume_out--, x:=0</label>
			<nail x="176" y="-24"/>
		</transition>
		<transition>
			<source ref="id40"/>
			<target ref="id38"/>
			<label kind="guard" x="216" y="-32">x==BYTES4</label>
			<label kind="assignment" x="216" y="-16">getvolume++</label>
			<nail x="208" y="-24"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id41"/>
			<label kind="guard" x="24" y="16">address_lookup_out&gt;0</label>
			<label kind="synchronisation" x="32" y="32">hurry!</label>
			<label kind="assignment" x="32" y="48">address_lookup_out--,
x:=0</label>
			<nail x="40" y="72"/>
		</transition>
		<transition>
			<source ref="id41"/>
			<target ref="id38"/>
			<label kind="guard" x="-16" y="120">x==BYTES4</label>
			<label kind="assignment" x="-16" y="136">address_lookup++</label>
			<nail x="24" y="88"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id42"/>
			<label kind="guard" x="40" y="344">nav_result_out&gt;0</label>
			<label kind="synchronisation" x="120" y="360">hurry!</label>
			<label kind="assignment" x="8" y="376">nav_result_out--, x:=0</label>
			<nail x="168" y="376"/>
		</transition>
		<transition>
			<source ref="id42"/>
			<target ref="id38"/>
			<label kind="guard" x="224" y="360">x==BYTES64</label>
			<label kind="assignment" x="224" y="376">nav_result++</label>
			<nail x="216" y="376"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id43"/>
			<label kind="guard" x="-56" y="200">receive_out&gt;0</label>
			<label kind="synchronisation" x="-56" y="216">hurry!</label>
			<label kind="assignment" x="-56" y="232">receive_out--,x:=0</label>
			<nail x="32" y="256"/>
		</transition>
		<transition>
			<source ref="id43"/>
			<target ref="id38"/>
			<label kind="guard" x="56" y="272">x==BYTES64</label>
			<label kind="assignment" x="56" y="288">rec_nav++</label>
			<nail x="56" y="272"/>
		</transition>
		<transition>
			<source ref="id38"/>
			<target ref="id44"/>
			<label kind="guard" x="360" y="184">handle_tmc_out&gt;0</label>
			<label kind="synchronisation" x="364" y="198">hurry!</label>
			<label kind="assignment" x="364" y="214">handle_tmc_out--, x:=0</label>
			<nail x="384" y="248"/>
		</transition>
		<transition>
			<source ref="id44"/>
			<target ref="id38"/>
			<label kind="guard" x="272" y="272">x==BYTES64</label>
			<label kind="assignment" x="272" y="288">htmc++</label>
			<nail x="360" y="280"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Jitter</name>
		<parameter>const int P, const int J, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x;</declaration>
		<location id="id45" x="64" y="0">
			<name x="80" y="8">L1</name>
			<label kind="invariant" x="80" y="24">x&lt;=J</label>
		</location>
		<location id="id46" x="224" y="0">
			<name x="240" y="0">L2</name>
			<label kind="invariant" x="240" y="16">x&lt;=P</label>
		</location>
		<location id="id47" x="-64" y="0">
			<name x="-80" y="16">L0</name>
			<label kind="invariant" x="-80" y="32">x&lt;=P</label>
		</location>
		<init ref="id47"/>
		<transition>
			<source ref="id45"/>
			<target ref="id46"/>
			<label kind="assignment" x="120" y="-16">event++</label>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id45"/>
			<label kind="guard" x="120" y="-64">x&gt;=P</label>
			<label kind="assignment" x="120" y="-48">x=0</label>
			<nail x="192" y="-32"/>
			<nail x="96" y="-32"/>
		</transition>
		<transition>
			<source ref="id47"/>
			<target ref="id45"/>
			<label kind="assignment" x="-24" y="-16">x=0</label>
		</transition>
		<transition>
			<source ref="id45"/>
			<target ref="id45"/>
			<label kind="select" x="40" y="-104">i:int[M,N]</label>
			<label kind="synchronisation" x="40" y="-88">signal[i]?</label>
			<nail x="48" y="-64"/>
			<nail x="80" y="-64"/>
		</transition>
		<transition>
			<source ref="id46"/>
			<target ref="id46"/>
			<label kind="select" x="200" y="-104">i:int[M,N]</label>
			<label kind="synchronisation" x="200" y="-88">signal[i]?</label>
			<nail x="208" y="-64"/>
			<nail x="240" y="-64"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Burst</name>
		<parameter>const int P, const int J, const int D, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x, y;//, z;

int pending=0, snd=0;

/***************************************************

Explanation of the burst automaton (that can also be
used  for cases where J&lt;P!)

Clock x is used to increment variable "pending" every
P timeunits. 
Clock y measures the time until the next deadline for
actually generating an event.
Clock z measures the inter-event time.

0th event \in [0,J] -&gt; pending++ at time 0
1st event \in [P,P+J] -&gt; pending++ at time P
2nd event \in [2P,2P+J] -&gt; pending++ at time 2P
...

Whenever an event is really generated (righthand loop,
can only happen if pending&gt;0), then variable "snd" is
incremented. This is the signal that the deadline for
the next event can be shifted by P timeunits. That
happens in the lower transition/loop.

An upper bound for "pending" and "snd" is
the number of events that can be bursted at the same time
if D is neglected. This number equals the number of
overlapping intervals: (J/P)+1.

Note that an additional clock often is expensive for
model checking. Therefore, leaving out z is - in my
opinion - a good idea when one encounters the state
space explosion. This effectively sets D to 0, which
gives an overapproximation of any case where D&gt;0.

***************************************************/</declaration>
		<location id="id48" x="512" y="128">
			<label kind="invariant" x="392" y="136">x&lt;=P &amp;&amp; y&lt;=P</label>
		</location>
		<location id="id49" x="158" y="127">
			<committed/>
		</location>
		<location id="id50" x="320" y="128">
			<label kind="invariant" x="200" y="136">x&lt;=P &amp;&amp; y&lt;=J</label>
		</location>
		<init ref="id49"/>
		<transition>
			<source ref="id48"/>
			<target ref="id48"/>
			<label kind="select" x="352" y="-40">i:int[M,N]</label>
			<label kind="synchronisation" x="352" y="-24">signal[i]?</label>
			<nail x="392" y="0"/>
			<nail x="416" y="-16"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id50"/>
			<label kind="select" x="136" y="-40">i:int[M,N]</label>
			<label kind="synchronisation" x="136" y="-24">signal[i]?</label>
			<nail x="176" y="0"/>
			<nail x="200" y="-16"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id48"/>
			<label kind="guard" x="496" y="16">x==P</label>
			<label kind="assignment" x="496" y="32">pending++,
x=0</label>
			<nail x="528" y="64"/>
			<nail x="496" y="64"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id48"/>
			<label kind="guard" x="448" y="192">/*z&gt;D &amp;&amp;*/ pending&gt;0</label>
			<label kind="assignment" x="448" y="208">pending--, event++,
snd++/*, z=0*/</label>
			<nail x="496" y="192"/>
			<nail x="528" y="192"/>
		</transition>
		<transition>
			<source ref="id48"/>
			<target ref="id48"/>
			<label kind="guard" x="584" y="112">y==P &amp;&amp; snd&gt;0</label>
			<label kind="assignment" x="584" y="128">snd--, y=0</label>
			<nail x="576" y="144"/>
			<nail x="576" y="112"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id48"/>
			<label kind="guard" x="360" y="96">y==J &amp;&amp; snd&gt;0</label>
			<label kind="assignment" x="360" y="112">snd--, y=0</label>
		</transition>
		<transition>
			<source ref="id49"/>
			<target ref="id50"/>
			<label kind="assignment" x="200" y="104">pending++</label>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id50"/>
			<label kind="guard" x="302" y="15">x==P</label>
			<label kind="assignment" x="302" y="31">pending++,
x=0</label>
			<nail x="302" y="63"/>
			<nail x="336" y="64"/>
		</transition>
		<transition>
			<source ref="id50"/>
			<target ref="id50"/>
			<label kind="guard" x="256" y="192">/*z&gt;D &amp;&amp;*/ pending&gt;0</label>
			<label kind="assignment" x="256" y="208">pending--, event++,
snd++/*, z=0*/</label>
			<nail x="336" y="192"/>
			<nail x="304" y="192"/>
		</transition>
	</template>
	<template>
		<name>PeriodicSporadic</name>
		<parameter>const bool periodic, const int P, const bool offset, const int OFFSET, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x;</declaration>
		<location id="id51" x="-128" y="96">
			<label kind="invariant" x="-138" y="111">x&lt;=P</label>
		</location>
		<location id="id52" x="-128" y="32">
			<label kind="invariant" x="-160" y="48">x&lt;=OFFSET</label>
		</location>
		<location id="id53" x="-64" y="-64">
		</location>
		<location id="id54" x="-224" y="64">
			<committed/>
		</location>
		<location id="id55" x="-224" y="-64">
			<committed/>
		</location>
		<location id="id56" x="96" y="-64">
		</location>
		<location id="id57" x="96" y="64">
			<label kind="invariant" x="80" y="32">x&lt;=P</label>
		</location>
		<init ref="id55"/>
		<transition>
			<source ref="id51"/>
			<target ref="id57"/>
			<label kind="assignment" x="-76" y="80">event++, x=0</label>
			<nail x="32" y="96"/>
		</transition>
		<transition>
			<source ref="id52"/>
			<target ref="id57"/>
			<label kind="guard" x="-96" y="0">x==OFFSET</label>
			<label kind="assignment" x="-96" y="16">event++, x=0</label>
			<nail x="32" y="32"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id51"/>
			<label kind="guard" x="-192" y="72">!offset</label>
			<nail x="-192" y="96"/>
		</transition>
		<transition>
			<source ref="id54"/>
			<target ref="id52"/>
			<label kind="guard" x="-192" y="8">offset</label>
			<nail x="-192" y="32"/>
		</transition>
		<transition>
			<source ref="id53"/>
			<target ref="id56"/>
			<label kind="assignment" x="-32" y="-88">event++, x=0</label>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id53"/>
			<label kind="guard" x="-176" y="-88">!periodic</label>
		</transition>
		<transition>
			<source ref="id55"/>
			<target ref="id54"/>
			<label kind="guard" x="-216" y="-32">periodic</label>
		</transition>
		<transition>
			<source ref="id56"/>
			<target ref="id56"/>
			<label kind="guard" x="72" y="-168">x&gt;=P</label>
			<label kind="assignment" x="72" y="-152">event++, x=0</label>
			<nail x="80" y="-128"/>
			<nail x="112" y="-128"/>
		</transition>
		<transition>
			<source ref="id56"/>
			<target ref="id56"/>
			<label kind="select" x="168" y="-80">i:int[M,N]</label>
			<label kind="synchronisation" x="168" y="-64">signal[i]?</label>
			<nail x="160" y="-80"/>
			<nail x="160" y="-48"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="select" x="168" y="48">i:int[M,N]</label>
			<label kind="synchronisation" x="168" y="64">signal[i]?</label>
			<nail x="160" y="48"/>
			<nail x="160" y="80"/>
		</transition>
		<transition>
			<source ref="id57"/>
			<target ref="id57"/>
			<label kind="guard" x="72" y="128">x==P</label>
			<label kind="assignment" x="72" y="144">event++, x=0</label>
			<nail x="80" y="128"/>
			<nail x="112" y="128"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">JitterMeasure</name>
		<parameter>const int P, const int J, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x;

int cnt[(N-M)+1], in[(N-M)+1];

void reset ()
{
  for (i:int[0,(N-M)])
    cnt[i] = -1;
}

void inc ()
{
  for (i:int[0,(N-M)])
    in[i]++;
}

bool ready ()
{
  for (i:int[0,(N-M)])
    if (cnt[i]!=-1)
      return false;
  return true;
}

void set ()
{
  for (i:int[0,(N-M)])
    cnt[i] = in[i]-1;
}

void dec (int i)
{
  cnt[i-M] = cnt[i-M]&gt;=0 ? cnt[i-M]-1 : cnt[i-M];
  in[i-M] = in[i-M]&gt;0 ? in[i-M]-1 : in[i-M];
}</declaration>
		<location id="id58" x="288" y="128">
			<committed/>
		</location>
		<location id="id59" x="64" y="128">
			<committed/>
		</location>
		<location id="id60" x="64" y="0">
			<name x="24" y="0">L1</name>
			<label kind="invariant" x="0" y="16">x&lt;=J</label>
		</location>
		<location id="id61" x="288" y="0">
			<name x="304" y="0">L2</name>
			<label kind="invariant" x="304" y="16">x&lt;=P</label>
		</location>
		<location id="id62" x="-64" y="0">
			<name x="-80" y="16">L0</name>
			<label kind="invariant" x="-80" y="32">x&lt;=P</label>
		</location>
		<init ref="id62"/>
		<transition>
			<source ref="id58"/>
			<target ref="id61"/>
			<label kind="assignment" x="312" y="96">obs=-1</label>
			<nail x="304" y="96"/>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id58"/>
			<label kind="select" x="208" y="72">i:int[M,N]</label>
			<label kind="guard" x="208" y="88">cnt[i-M]==0</label>
			<label kind="synchronisation" x="208" y="104">signal[i]?</label>
			<label kind="assignment" x="208" y="120">cnt[i-M]--,
obs=i, in[i-M]--</label>
			<nail x="272" y="96"/>
		</transition>
		<transition>
			<source ref="id59"/>
			<target ref="id60"/>
			<label kind="assignment" x="80" y="96">obs=-1</label>
			<nail x="80" y="96"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id59"/>
			<label kind="select" x="-16" y="72">i:int[M,N]</label>
			<label kind="guard" x="-16" y="88">cnt[i-M]==0</label>
			<label kind="synchronisation" x="-16" y="104">signal[i]?</label>
			<label kind="assignment" x="-16" y="120">cnt[i-M]--,
obs=i, in[i-M]--</label>
			<nail x="48" y="96"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="guard" x="128" y="16">ready()</label>
			<label kind="assignment" x="128" y="32">event++, inc(),
set(), rt=0</label>
			<nail x="96" y="32"/>
			<nail x="256" y="32"/>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id61"/>
			<label kind="assignment" x="128" y="-16">event++, inc()</label>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id60"/>
			<label kind="guard" x="136" y="-64">x&gt;=P</label>
			<label kind="assignment" x="136" y="-48">x=0</label>
			<nail x="256" y="-32"/>
			<nail x="96" y="-32"/>
		</transition>
		<transition>
			<source ref="id62"/>
			<target ref="id60"/>
			<label kind="assignment" x="-40" y="-16">reset(), x=0</label>
		</transition>
		<transition>
			<source ref="id60"/>
			<target ref="id60"/>
			<label kind="select" x="40" y="-120">i:int[M,N]</label>
			<label kind="guard" x="40" y="-136">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="40" y="-104">signal[i]?</label>
			<label kind="assignment" x="40" y="-88">dec(i)</label>
			<nail x="48" y="-64"/>
			<nail x="80" y="-64"/>
		</transition>
		<transition>
			<source ref="id61"/>
			<target ref="id61"/>
			<label kind="select" x="264" y="-120">i:int[M,N]</label>
			<label kind="guard" x="264" y="-136">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="264" y="-104">signal[i]?</label>
			<label kind="assignment" x="264" y="-88">dec(i)</label>
			<nail x="272" y="-64"/>
			<nail x="304" y="-64"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">BurstMeasure</name>
		<parameter>const int P, const int J, const int D, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x, y;//, z;

int pending=0, snd=0;

int cnt[(N-M)+1], in[(N-M)+1];

void reset ()
{
  for (i:int[0,(N-M)])
    cnt[i] = -1;
}

void inc ()
{
  for (i:int[0,(N-M)])
    in[i]++;
}

bool ready ()
{
  for (i:int[0,(N-M)])
    if (cnt[i]!=-1)
      return false;
  return true;
}

void set ()
{
  for (i:int[0,(N-M)])
    cnt[i] = in[i]-1;
}

void dec (int i)
{
  cnt[i-M] = cnt[i-M]&gt;=0 ? cnt[i-M]-1 : cnt[i-M];
  in[i-M] = in[i-M]&gt;0 ? in[i-M]-1 : in[i-M];
}

/***************************************************

Explanation of the burst automaton (that can also be
used  for cases where J&lt;P!)

Clock x is used to increment variable "pending" every
P timeunits. 
Clock y measures the time until the next deadline for
actually generating an event.
Clock z measures the inter-event time.

0th event \in [0,J] -&gt; pending++ at time 0
1st event \in [P,P+J] -&gt; pending++ at time P
2nd event \in [2P,2P+J] -&gt; pending++ at time 2P
...

Whenever an event is really generated (righthand loop,
can only happen if pending&gt;0), then variable "snd" is
incremented. This is the signal that the deadline for
the next event can be shifted by P timeunits. That
happens in the lower transition/loop.

An upper bound for "pending" and "snd" is
the number of events that can be bursted at the same time
if D is neglected. This number equals the number of
overlapping intervals: (J/P)+1.

Note that an additional clock often is expensive for
model checking. Therefore, leaving out z is - in my
opinion - a good idea when one encounters the state
space explosion. This effectively sets D to 0, which
gives an overapproximation of any case where D&gt;0.

***************************************************/</declaration>
		<location id="id63" x="512" y="-64">
			<committed/>
		</location>
		<location id="id64" x="128" y="-64">
			<committed/>
		</location>
		<location id="id65" x="512" y="128">
			<label kind="invariant" x="392" y="136">x&lt;=P &amp;&amp; y&lt;=P</label>
		</location>
		<location id="id66" x="32" y="128">
			<committed/>
		</location>
		<location id="id67" x="256" y="128">
			<label kind="invariant" x="144" y="136">x&lt;=P &amp;&amp; y&lt;=J</label>
		</location>
		<init ref="id66"/>
		<transition>
			<source ref="id63"/>
			<target ref="id65"/>
			<label kind="assignment" x="456" y="0">obs=-1</label>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id63"/>
			<label kind="select" x="560" y="-48">i:int[M,N]</label>
			<label kind="guard" x="552" y="-32">cnt[i-M]==0</label>
			<label kind="synchronisation" x="560" y="-16">signal[i]?</label>
			<label kind="assignment" x="552" y="0">cnt[i-M]--,
obs=i, in[i-M]--</label>
			<nail x="544" y="-32"/>
		</transition>
		<transition>
			<source ref="id64"/>
			<target ref="id67"/>
			<label kind="assignment" x="72" y="-32">obs=-1</label>
			<nail x="128" y="0"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id64"/>
			<label kind="select" x="144" y="-64">i:int[M,N]</label>
			<label kind="guard" x="152" y="-48">cnt[i-M]==0</label>
			<label kind="synchronisation" x="168" y="-32">signal[i]?</label>
			<label kind="assignment" x="176" y="-16">cnt[i-M]--,
obs=i, in[i-M]--</label>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="guard" x="264" y="224">/*z&gt;D &amp;&amp;*/ pending&gt;0 &amp;&amp; ready()</label>
			<label kind="assignment" x="312" y="240">pending--, event++,
snd++, /*z=0,*/ inc(),
set(), rt=0</label>
			<nail x="352" y="224"/>
			<nail x="384" y="224"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="guard" x="216" y="288">/*z&gt;D &amp;&amp;*/ pending&gt;0</label>
			<label kind="assignment" x="216" y="304">pending--, event++,
snd++, /*z=0,*/ inc(),
set(), rt=0</label>
			<nail x="240" y="288"/>
			<nail x="272" y="288"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="select" x="280" y="-8">i:int[M,N]</label>
			<label kind="guard" x="264" y="-24">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="280" y="8">signal[i]?</label>
			<label kind="assignment" x="272" y="24">dec(i)</label>
			<nail x="320" y="32"/>
			<nail x="344" y="16"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="select" x="-88" y="24">i:int[M,N]</label>
			<label kind="guard" x="-88" y="8">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="-88" y="40">signal[i]?</label>
			<label kind="assignment" x="-88" y="56">dec(i)</label>
			<nail x="-48" y="64"/>
			<nail x="-24" y="48"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="guard" x="544" y="48">x==P</label>
			<label kind="assignment" x="544" y="64">pending++,
x=0</label>
			<nail x="576" y="96"/>
			<nail x="544" y="96"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="guard" x="448" y="192">/*z&gt;D &amp;&amp;*/ pending&gt;0</label>
			<label kind="assignment" x="448" y="208">pending--, event++,
snd++, /*z=0,*/ inc()</label>
			<nail x="496" y="192"/>
			<nail x="528" y="192"/>
		</transition>
		<transition>
			<source ref="id65"/>
			<target ref="id65"/>
			<label kind="guard" x="584" y="112">y==P &amp;&amp; snd&gt;0</label>
			<label kind="assignment" x="584" y="128">snd--, y=0</label>
			<nail x="576" y="144"/>
			<nail x="576" y="112"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id65"/>
			<label kind="guard" x="320" y="112">y==J &amp;&amp; snd&gt;0</label>
			<label kind="assignment" x="320" y="128">snd--, y=0</label>
		</transition>
		<transition>
			<source ref="id66"/>
			<target ref="id67"/>
			<label kind="assignment" x="72" y="112">pending++,
reset()</label>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="guard" x="286" y="47">x==P</label>
			<label kind="assignment" x="286" y="63">pending++,
x=0</label>
			<nail x="286" y="95"/>
			<nail x="320" y="96"/>
		</transition>
		<transition>
			<source ref="id67"/>
			<target ref="id67"/>
			<label kind="guard" x="16" y="224">/*z&gt;D &amp;&amp;*/ pending&gt;0 &amp;&amp; ready()</label>
			<label kind="assignment" x="16" y="240">pending--, event++,
snd++/*, z=0*/, inc(),
set(), rt=0</label>
			<nail x="96" y="224"/>
			<nail x="64" y="224"/>
		</transition>
	</template>
	<template>
		<name>PeriodicSporadicMeasure</name>
		<parameter>const bool periodic, const int P, const bool offset, const int OFFSET, int &amp;event, const int M, const int N</parameter>
		<declaration>clock x;

int cnt[(N-M)+1], in[(N-M)+1];

void reset ()
{
  for (i:int[0,(N-M)])
  {
    cnt[i] = -1;
    in[i] = 0;
  }
}

bool ready ()
{
  for (i:int[0,(N-M)])
    if (cnt[i]!=-1)
      return false;
  return true;
}

void set ()
{
  for (i:int[0,(N-M)])
    cnt[i] = in[i]-1;
}

void inc ()
{
  for (i:int[0,(N-M)])
    in[i]++;
}

void dec (int i)
{
  cnt[i-M] = cnt[i-M]&gt;=0 ? cnt[i-M]-1 : cnt[i-M];
  in[i-M] = in[i-M]&gt;0 ? in[i-M]-1 : in[i-M];
}</declaration>
		<location id="id68" x="224" y="128">
			<committed/>
		</location>
		<location id="id69" x="256" y="-128">
			<committed/>
		</location>
		<location id="id70" x="-128" y="96">
			<label kind="invariant" x="-152" y="112">x&lt;=P</label>
		</location>
		<location id="id71" x="-128" y="-32">
			<label kind="invariant" x="-200" y="-64">x&lt;=OFFSET</label>
		</location>
		<location id="id72" x="-64" y="-192">
		</location>
		<location id="id73" x="-224" y="64">
			<committed/>
		</location>
		<location id="id74" x="-224" y="-192">
			<committed/>
		</location>
		<location id="id75" x="96" y="-192">
		</location>
		<location id="id76" x="96" y="64">
			<label kind="invariant" x="48" y="80">x&lt;=P</label>
		</location>
		<init ref="id74"/>
		<transition>
			<source ref="id70"/>
			<target ref="id76"/>
			<label kind="guard" x="-80" y="128">ready()</label>
			<label kind="assignment" x="-80" y="144">event++, x=0, inc(),
set(), rt=0</label>
			<nail x="-96" y="128"/>
			<nail x="32" y="128"/>
		</transition>
		<transition>
			<source ref="id71"/>
			<target ref="id76"/>
			<label kind="guard" x="-104" y="0">x==OFFSET &amp;&amp; ready()</label>
			<label kind="assignment" x="-96" y="16">event++, x=0,
inc(), set(), rt=0</label>
			<nail x="-96" y="32"/>
		</transition>
		<transition>
			<source ref="id72"/>
			<target ref="id75"/>
			<label kind="guard" x="-40" y="-208">ready()</label>
			<label kind="assignment" x="-44" y="-192">event++, x=0,
inc(), set(), rt=0</label>
		</transition>
		<transition>
			<source ref="id69"/>
			<target ref="id75"/>
			<label kind="assignment" x="168" y="-152">obs=-1</label>
		</transition>
		<transition>
			<source ref="id75"/>
			<target ref="id69"/>
			<label kind="select" x="272" y="-168">i:int[M,N]</label>
			<label kind="guard" x="272" y="-152">cnt[i-M]==0</label>
			<label kind="synchronisation" x="272" y="-136">signal[i]?</label>
			<label kind="assignment" x="272" y="-120">cnt[i-M]--,
obs=i, in[i-M]--</label>
			<nail x="256" y="-160"/>
		</transition>
		<transition>
			<source ref="id68"/>
			<target ref="id76"/>
			<label kind="assignment" x="128" y="104">obs=-1</label>
		</transition>
		<transition>
			<source ref="id76"/>
			<target ref="id68"/>
			<label kind="select" x="232" y="80">i:int[M,N]</label>
			<label kind="guard" x="232" y="96">cnt[i-M]==0</label>
			<label kind="synchronisation" x="248" y="112">signal[i]?</label>
			<label kind="assignment" x="248" y="128">cnt[i-M]--,
obs=i, in[i-M]--</label>
			<nail x="224" y="96"/>
		</transition>
		<transition>
			<source ref="id76"/>
			<target ref="id76"/>
			<label kind="guard" x="200" y="8">x==P &amp;&amp; ready()</label>
			<label kind="assignment" x="200" y="24">event++, x=0,
inc(), set(), rt=0</label>
			<nail x="192" y="16"/>
			<nail x="192" y="40"/>
		</transition>
		<transition>
			<source ref="id75"/>
			<target ref="id75"/>
			<label kind="guard" x="200" y="-248">x&gt;=P &amp;&amp; ready()</label>
			<label kind="assignment" x="200" y="-232">event++, x=0,
inc(), set(), rt=0</label>
			<nail x="192" y="-240"/>
			<nail x="192" y="-216"/>
		</transition>
		<transition>
			<source ref="id70"/>
			<target ref="id76"/>
			<label kind="assignment" x="-88" y="64">event++, x=0, inc()</label>
			<nail x="-96" y="64"/>
		</transition>
		<transition>
			<source ref="id71"/>
			<target ref="id76"/>
			<label kind="guard" x="-96" y="-64">x==OFFSET</label>
			<label kind="assignment" x="-96" y="-48">event++, x=0, inc()</label>
			<nail x="0" y="-32"/>
		</transition>
		<transition>
			<source ref="id73"/>
			<target ref="id70"/>
			<label kind="guard" x="-184" y="56">!offset</label>
		</transition>
		<transition>
			<source ref="id73"/>
			<target ref="id71"/>
			<label kind="guard" x="-200" y="-16">offset</label>
		</transition>
		<transition>
			<source ref="id72"/>
			<target ref="id75"/>
			<label kind="assignment" x="-48" y="-240">event++, x=0, inc()</label>
			<nail x="-32" y="-224"/>
			<nail x="32" y="-224"/>
		</transition>
		<transition>
			<source ref="id74"/>
			<target ref="id72"/>
			<label kind="guard" x="-176" y="-208">!periodic</label>
			<label kind="assignment" x="-176" y="-192">reset()</label>
		</transition>
		<transition>
			<source ref="id74"/>
			<target ref="id73"/>
			<label kind="guard" x="-216" y="-160">periodic</label>
			<label kind="assignment" x="-216" y="-144">reset()</label>
		</transition>
		<transition>
			<source ref="id75"/>
			<target ref="id75"/>
			<label kind="guard" x="72" y="-296">x&gt;=P</label>
			<label kind="assignment" x="72" y="-280">event++, x=0, inc()</label>
			<nail x="80" y="-256"/>
			<nail x="112" y="-256"/>
		</transition>
		<transition>
			<source ref="id75"/>
			<target ref="id75"/>
			<label kind="select" x="56" y="-128">i:int[M,N]</label>
			<label kind="guard" x="-56" y="-144">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="64" y="-112">signal[i]?</label>
			<label kind="assignment" x="64" y="-96">dec(i)</label>
			<nail x="112" y="-144"/>
			<nail x="80" y="-144"/>
		</transition>
		<transition>
			<source ref="id76"/>
			<target ref="id76"/>
			<label kind="select" x="72" y="-32">i:int[M,N]</label>
			<label kind="guard" x="64" y="-48">cnt[i-M]==-1 || cnt[i-M]&gt;0</label>
			<label kind="synchronisation" x="72" y="-16">signal[i]?</label>
			<label kind="assignment" x="72" y="0">dec(i)</label>
			<nail x="80" y="16"/>
			<nail x="112" y="16"/>
		</transition>
		<transition>
			<source ref="id76"/>
			<target ref="id76"/>
			<label kind="guard" x="72" y="128">x==P</label>
			<label kind="assignment" x="72" y="144">event++, x=0, inc()</label>
			<nail x="80" y="128"/>
			<nail x="112" y="128"/>
		</transition>
	</template>
	<system>/*********************************************************************/
/*********************************************************************/
/*********************************************************************/

U1_PO = PeriodicSporadic(
	true,
	TS/KEYPRESS1_PER_SEC,
	true,
	0,
	keypress1,
	AC1,VC1);

U1_PNO = PeriodicSporadic(
	true,
	TS/KEYPRESS1_PER_SEC,
	false,
	0,
	keypress1,
	AC1,VC1);

U1_SP = PeriodicSporadic(
	false,
	TS/KEYPRESS1_PER_SEC,
	false,
	0,
	keypress1,
	AC1,VC1);

U1_PO_M = PeriodicSporadicMeasure(
	true,
	TS/KEYPRESS1_PER_SEC,
	true,
	0,
	keypress1,
	AC1,VC1);

U1_PNO_M = PeriodicSporadicMeasure(
	true,
	TS/KEYPRESS1_PER_SEC,
	false,
	0,
	keypress1,
	AC1,VC1);

U1_SP_M = PeriodicSporadicMeasure(
	false,
	TS/KEYPRESS1_PER_SEC,
	false,
	0,
	keypress1,
	AC1,VC1);

/*********************************************************************/
/*********************************************************************/
/*********************************************************************/

U2_PO = PeriodicSporadic(
	true,
	TS/KEYPRESS2_PER_SEC,
	true,
	0,
	keypress2,
	VC2,VC2);

U2_PNO = PeriodicSporadic(
	true,
	TS/KEYPRESS2_PER_SEC,
	false,
	0,
	keypress2,
	VC2,VC2);

U2_SP = PeriodicSporadic(
	false,
	TS/KEYPRESS2_PER_SEC,
	false,
	0,
	keypress2,
	VC2,VC2);

U2_PO_M = PeriodicSporadicMeasure(
	true,
	TS/KEYPRESS2_PER_SEC,
	true,
	0,
	keypress2,
	VC2,VC2);

U2_PNO_M = PeriodicSporadicMeasure(
	true,
	TS/KEYPRESS2_PER_SEC,
	false,
	0,
	keypress2,
	VC2,VC2);

U2_SP_M = PeriodicSporadicMeasure(
	false,
	TS/KEYPRESS2_PER_SEC,
	false,
	0,
	keypress2,
	VC2,VC2);

U2_J = Jitter(
	TS/KEYPRESS2_PER_SEC,
	TS/KEYPRESS2_PER_SEC,
	keypress2,
	VC2,VC2);

U2_J_M = JitterMeasure(
	TS/KEYPRESS2_PER_SEC,
	TS/KEYPRESS2_PER_SEC,
	keypress2,
	VC2,VC2);

/*********************************************************************/
/*********************************************************************/
/*********************************************************************/


R_PO = PeriodicSporadic(
	true,
	(60/MESSAGES_PER_MINUTE)*TS,
	true,
	0,
	rec,
	VC3,VC3);

R_PNO = PeriodicSporadic(
	true,
	(60/MESSAGES_PER_MINUTE)*TS,
	false,
	0,
	rec,
	VC3,VC3);

R_SP = PeriodicSporadic(
	false,
	(60/MESSAGES_PER_MINUTE)*TS,
	false,
	0,
	rec,
	VC3,VC3);

R_J = Jitter(
	(60/MESSAGES_PER_MINUTE)*TS,
	((60/MESSAGES_PER_MINUTE)*TS),
	rec,
	VC3,VC3);

R_B = Burst(
	(60/MESSAGES_PER_MINUTE)*TS,
	2*((60/MESSAGES_PER_MINUTE)*TS),
	0,
	rec,
	VC3,VC3);

R_PO_M = PeriodicSporadicMeasure(
	true,
	(60/MESSAGES_PER_MINUTE)*TS,
	true,
	0,
	rec,
	VC3,VC3);

R_PNO_M = PeriodicSporadicMeasure(
	true,
	(60/MESSAGES_PER_MINUTE)*TS,
	false,
	0,
	rec,
	VC3,VC3);

R_SP_M = PeriodicSporadicMeasure(
	false,
	(60/MESSAGES_PER_MINUTE)*TS,
	false,
	0,
	rec,
	VC3,VC3);

R_J_M = JitterMeasure(
	(60/MESSAGES_PER_MINUTE)*TS,
	((60/MESSAGES_PER_MINUTE)*TS),
	rec,
	VC3,VC3);

R_B_M = BurstMeasure(
	(60/MESSAGES_PER_MINUTE)*TS,
	2*((60/MESSAGES_PER_MINUTE)*TS),
	0,
	rec,
	VC3,VC3);
system

	// The response time of "TMC message handling" with "volume change":
	R_PO_M, U1_PO,

	// The response time of "TMC message handling" with "address lookup":
	//R_PNO_M, U2_PNO,

	// The response time of "volume change" with "TMC handling:
	//U1_PNO_M, R_PNO,

	// The response time of "address lookup" with "TMC handling:
	//U2_PNO_M, R_PNO,

MMI,BusP,NAV,RAD,
HurryDummy;</system>
	<queries>
		<query>
			<formula>/* Health check: */</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[](MMI.D&lt;2147483648 &amp;&amp; MMI.D2&lt;2147483648 &amp;&amp; NAV.D&lt;2147483648 &amp;&amp; RAD.D&lt;2147483648 &amp;&amp; BusP.D&lt;2147483648)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[](not deadlock)</formula>
			<comment></comment>
		</query>
		<query>
			<formula>/* Binairy search for worst-case response time: */</formula>
			<comment></comment>
		</query>
		<query>
			<formula>A[](obs==VC3 imply rt&lt;357132)</formula>
			<comment>WCRT</comment>
		</query>
		<query>
			<formula>/* Binairy search for best-case response time: */</formula>
			<comment></comment>
		</query>
		<query>
			<formula>E&lt;&gt;(obs==VC2 &amp;&amp; rt&lt;79075)</formula>
			<comment>BCRT</comment>
		</query>
	</queries>
</nta>
